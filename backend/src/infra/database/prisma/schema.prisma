generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

// DELIVERY APP SCHEMA
enum Role {
  customer
  seller
  admin
}

enum Status {
  Pending
  Preparing
  Moving
  Delivered 
}

model DeliveryUser {
  id  String @id @default(uuid())
  name String
  email String @unique
  password String
  role Role @default(customer)
  sellerOrders DeliveryOrder[] @relation("seller")
  customerOrders DeliveryOrder[] @relation("customer")
  @@map("delivery_user")
}

model DeliveryProduct {
  id String @id @default(uuid())
  name String @unique
  imagePath String
  price Decimal @db.Decimal(4,2)
  orders DeliveryProductsOnOrders[]
  @@map("delivery_product")
}

model DeliveryOrder {
  id Int @id @default(autoincrement())
  customer DeliveryUser @relation("customer",fields: [customerId],references: [id])
  customerId String
  seller DeliveryUser @relation("seller",fields: [sellerId],references: [id])
  sellerId String
  totalPrice Decimal @db.Decimal(9,2)
  deliveryAddress String
  deliveryNumber String
  saleDate DateTime @default(now())
  status Status @default(Pending)
  products DeliveryProductsOnOrders[]
  @@map("delivery_order")
}

model DeliveryProductsOnOrders {
  product DeliveryProduct @relation(fields: [productId], references: [id])
  productId String
  order DeliveryOrder @relation(fields: [orderId],references: [id])
  orderId Int
  quantity Int
  @@id([productId,orderId])
  @@map("delivery_product_order")
}