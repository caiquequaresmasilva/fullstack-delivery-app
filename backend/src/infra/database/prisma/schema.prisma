generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

//  CELL PHONES APP SCHEMA
model SequelizeMeta {
  name String @id @db.VarChar(255)
}

model brands {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar(255)
  products products[]
}

model colors {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar(255)
  products products[]
}

model products {
  id      String @id @db.VarChar(255)
  name    String @db.VarChar(255)
  brandId Int
  model   String @db.VarChar(255)
  price   Int
  colorId Int
  brands  brands @relation(fields: [brandId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  colors  colors @relation(fields: [colorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id       String @id @db.VarChar(255)
  name     String @db.VarChar(255)
  email    String @db.VarChar(255)
  password String @db.VarChar(255)
}

// DELIVERY APP SCHEMA
enum Role {
  customer
  seller
  admin
}

enum Status {
  Pending
  Preparing
  Moving
  Delivered 
}

model DeliveryUser {
  id  String @id @default(uuid())
  name String
  email String @unique
  password String
  role Role @default(customer)
  sellerOrders DeliveryOrder[] @relation("seller")
  customerOrders DeliveryOrder[] @relation("customer")
}

model DeliveryProduct {
  id String @id @default(uuid())
  name String @unique
  imagePath String
  price Decimal @db.Decimal(4,2)
  orders DeliveryProductsOnOrders[]
}

model DeliveryOrder {
  id String @id @default(uuid())
  customer DeliveryUser @relation("customer",fields: [customerId],references: [id])
  customerId String
  seller DeliveryUser @relation("seller",fields: [sellerId],references: [id])
  sellerId String
  totalPrice Decimal @db.Decimal(9,2)
  deliveryAddress String
  deliveryNumber String
  saleDate DateTime @default(now())
  status Status @default(Pending)
  products DeliveryProductsOnOrders[]
}

model DeliveryProductsOnOrders {
  product DeliveryProduct @relation(fields: [productId], references: [id])
  productId String
  order DeliveryOrder @relation(fields: [orderId],references: [id])
  orderId String
  quantity Int
  @@id([productId,orderId])
}